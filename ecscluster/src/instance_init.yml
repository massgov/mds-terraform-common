#cloud-config

runcmd:
  # Commands from golden image userdata
  - "yum -y update"
  - "yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm"
  - "systemctl enable amazon-ssm-agent"
  - "systemctl start amazon-ssm-agent"

  # Commands from https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-install.html
  - "sudo amazon-linux-extras disable docker"
  - "sudo amazon-linux-extras install -y ecs"

  # The `--no-block` option is required because the ecs systemd service
  # depends on the cloudinit systemd service. Without the `--no-block` option,
  # ecs hangs and cloudinit never completes. Once that happens it can only be
  # started by logging in, stopping the ecs service, and starting it again.
  # See https://github.com/aws/amazon-ecs-agent/issues/1707
  - "sudo systemctl enable --now --no-block ecs"

  # Extra commands to match previous AMI - the Golden AMI has the ec2-user's
  # shell set to `/sbin/nologin`. We typically use that user to access docker,
  # which also requires the docker group.
  - "sudo usermod -s /bin/bash ec2-user"
  - "sudo usermod -a -G docker ec2-user"

  # Commands to re-configure the docker data directory
  - "sudo systemctl stop docker"
  - |
    if [ -d /var/lib/docker ]; then
      sudo mv -f /var/lib/docker /docker
      sudo ln -s /docker /var/lib/docker
    fi
  - |
    if [ ! -d /docker ]; then
      sudo mkdir /docker
    fi
  # Replicate owner and mode of default directory (/var/lib/docker)
  - "sudo chown root:root /docker"
  - "sudo chmod 710 /docker"
  - "sudo systemctl restart docker"


write_files:
  - content: |
      {
        "data-root":"/docker"
      }
    path: /etc/docker/daemon.json
  - content: |
      ECS_CLUSTER=${cluster_name}
      ECS_AVAILABLE_LOGGING_DRIVERS=["json-file", "awslogs"]
    path: /etc/ecs/ecs.config
